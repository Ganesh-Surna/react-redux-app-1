{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  count: 0,\n  isShowCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.count++;\n    },\n    incrementBy(state, action) {\n      state.count += action.payload;\n    },\n    decrement(state) {\n      state.count--;\n    },\n    toggleShow(state) {\n      state.isShowCounter = !state.isShowCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counterKey: counterSlice.reducer,\n    authKey: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n\n// import {createStore} from \"redux\";\n\n// const counterReducer=(state={count:0},action)=>{\n//     if(action.type===\"increment\"){\n//         return {count:state.count+1};\n//     }\n//     if(action.type===\"decrement\"){\n//         return {count:state.count-1};\n//     }\n//     return state;\n// };\n\n// const store=createStore(counterReducer);\n\n// export default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","count","isShowCounter","counterSlice","name","initialState","reducers","increment","state","incrementBy","action","payload","decrement","toggleShow","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","counterKey","authKey","counterActions","actions","authActions"],"sources":["C:/Users/GaneshSurna/Desktop/react-redux/redux-project-1/src/store/index.js"],"sourcesContent":["import { createSlice,configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState={count:0, isShowCounter:true};\r\n\r\nconst counterSlice=createSlice({\r\n    name:\"counter\",\r\n    initialState:initialCounterState,\r\n    reducers:{\r\n        increment(state){\r\n            state.count++;\r\n        },\r\n        incrementBy(state,action){\r\n            state.count+=action.payload;\r\n        },\r\n        decrement(state){\r\n            state.count--;\r\n        },\r\n        toggleShow(state){\r\n            state.isShowCounter=!state.isShowCounter;\r\n        },\r\n    },\r\n});\r\n\r\nconst initialAuthState={isAuthenticated:false};\r\n\r\nconst authSlice=createSlice({\r\n    name:\"authentication\",\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated=true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated=false;\r\n        },\r\n    },\r\n});\r\n\r\nconst store=configureStore({\r\n    reducer: {\r\n        counterKey:counterSlice.reducer,\r\n        authKey:authSlice.reducer,\r\n    },\r\n});\r\n\r\nexport const counterActions=counterSlice.actions;\r\nexport const authActions=authSlice.actions;\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import {createStore} from \"redux\";\r\n\r\n// const counterReducer=(state={count:0},action)=>{\r\n//     if(action.type===\"increment\"){\r\n//         return {count:state.count+1};\r\n//     }\r\n//     if(action.type===\"decrement\"){\r\n//         return {count:state.count-1};\r\n//     }\r\n//     return state;\r\n// };\r\n\r\n// const store=createStore(counterReducer);\r\n\r\n// export default store;"],"mappings":"AAAA,SAASA,WAAW,EAACC,cAAc,QAAQ,kBAAkB;AAE7D,MAAMC,mBAAmB,GAAC;EAACC,KAAK,EAAC,CAAC;EAAEC,aAAa,EAAC;AAAI,CAAC;AAEvD,MAAMC,YAAY,GAACL,WAAW,CAAC;EAC3BM,IAAI,EAAC,SAAS;EACdC,YAAY,EAACL,mBAAmB;EAChCM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,KAAK,EAAE;IACjB,CAAC;IACDQ,WAAWA,CAACD,KAAK,EAACE,MAAM,EAAC;MACrBF,KAAK,CAACP,KAAK,IAAES,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,SAASA,CAACJ,KAAK,EAAC;MACZA,KAAK,CAACP,KAAK,EAAE;IACjB,CAAC;IACDY,UAAUA,CAACL,KAAK,EAAC;MACbA,KAAK,CAACN,aAAa,GAAC,CAACM,KAAK,CAACN,aAAa;IAC5C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAC;EAACC,eAAe,EAAC;AAAK,CAAC;AAE9C,MAAMC,SAAS,GAAClB,WAAW,CAAC;EACxBM,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAACS,gBAAgB;EAC7BR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAC,IAAI;IAC9B,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAC,KAAK;IAC/B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAACpB,cAAc,CAAC;EACvBqB,OAAO,EAAE;IACLC,UAAU,EAAClB,YAAY,CAACiB,OAAO;IAC/BE,OAAO,EAACN,SAAS,CAACI;EACtB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,cAAc,GAACpB,YAAY,CAACqB,OAAO;AAChD,OAAO,MAAMC,WAAW,GAACT,SAAS,CAACQ,OAAO;AAE1C,eAAeL,KAAK;;AAUpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}